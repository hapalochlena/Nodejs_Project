service: friend-reminder
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  # stage: v1 # stage dev / prod
  region: eu-central-1
  # timeout: 30
  # memorySize: 512

plugins:
  - serverless-webpack

# custom:
#   webpack:
#     webpackConfig: 'webpack.config.js' # Name of webpack configuration file
#     includeModules: false # Node modules configuration for packaging
#     packager: 'npm' # Packager that will be used to package your external modules
#     # excludeFiles: src/**/*.test.js

package:
  individually: true # we want each lambda to be packaged individually
  excludeDevDependencies: true
  patterns:
    # - '!node_modules/**'
    # - 'node_modules/serverless-http/**'
    # - 'node_modules/express/**'
    # - 'node_modules/body-parser/**'
    - '!tests/**'

# * Remember to place this code within the appropriate section of your serverless.yml file, such as under the functions section if you're associating the layer with a specific function or under the provider section if the layer is meant to be used globally by all functions in your service.
# layers:
#   myLibs:
#     path: layer # * name of your folder
#     compatibleRuntimes:
#       - nodejs18.x

functions:
  hello: # lambda function called 'hello'
    handler: handler.hello # * => lambda handler = the 'hello' function in the 'index' file
    # layers:
    #   - {Ref: MyLibsLambdaLayer} # * Ref name is generated by TitleCasing the layer name & appending LambdaLayer
  api: # lambda function called 'api'
    handler: handler.handler # * => lambda handler = the 'handler' function in the 'index' file
    # layers:
    #   - {Ref: MyLibsLambdaLayer} # * Ref name is generated by TitleCasing the layer name & appending LambdaLayer
    events:
      - httpApi: '*' # paths like 'GET /hello'
      # - httpAPi:
      #     path: /users/create
      #     method: get
      # * OTHER EXAMPLE EVENTS:
      # - websocket: $connect
      # - s3: ${env:BUCKET}
      # - schedule: rate(10 minutes)
      # - sns: greeter-topic
      # - stream: ...
    # * ENVIRONMENT (.env):
    # environment:
      # NODE_ENV: development
      # KEY: secret123
      # POSTGRE_DB_USER: postgres
      # POSTGRE_DB_PASSWORD: pw123
      # ...

# custom:
#   webpack:
#     webpackConfig: 'webpack.config.js' # Name of webpack configuration file
#     includeModules: false # Node modules configuration for packaging
#     packager: 'npm' # Packager that will be used to package your external modules
#     excludeFiles: # Provide a glob for files to ignore
#       - tests/**
#       - package.json
#       # - .env

# layers:
#   CommonUtil:
#     name: ${opt:stage}-common-layer-test
#     description: Holds common utils - stage ${opt:stage}
#     # path: ../lambda-layers
#     comptabileRuntimes: nodejs18.x
#     package:
#       include:
#         - node_modules/**
